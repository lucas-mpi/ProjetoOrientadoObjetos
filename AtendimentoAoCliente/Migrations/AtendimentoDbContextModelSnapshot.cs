// <auto-generated />
using System;
using AtendimentoAoCliente.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtendimentoAoCliente.Migrations
{
    [DbContext(typeof(AtendimentoDbContext))]
    partial class AtendimentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Atendimentos", b =>
                {
                    b.Property<int>("AtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaAtendimentoSetorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AtendenteUsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComentarioAtendente")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComentarioCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusAtendimento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .HasColumnType("TEXT");

                    b.HasKey("AtendimentoId");

                    b.HasIndex("AreaAtendimentoSetorId");

                    b.HasIndex("AtendenteUsuarioId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Setores", b =>
                {
                    b.Property<int>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SetorId");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.TipoUsuario", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaTipoUsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SetorUsuarioSetorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsuarioAtivo")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CategoriaTipoUsuarioId");

                    b.HasIndex("SetorUsuarioSetorId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Atendimentos", b =>
                {
                    b.HasOne("AtendimentoAoCliente.Modelos.Setores", "AreaAtendimento")
                        .WithMany()
                        .HasForeignKey("AreaAtendimentoSetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtendimentoAoCliente.Modelos.Usuarios", "Atendente")
                        .WithMany()
                        .HasForeignKey("AtendenteUsuarioId");

                    b.HasOne("AtendimentoAoCliente.Modelos.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaAtendimento");

                    b.Navigation("Atendente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AtendimentoAoCliente.Modelos.Usuarios", b =>
                {
                    b.HasOne("AtendimentoAoCliente.Modelos.TipoUsuario", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaTipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtendimentoAoCliente.Modelos.Setores", "SetorUsuario")
                        .WithMany()
                        .HasForeignKey("SetorUsuarioSetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("SetorUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
